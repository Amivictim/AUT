local http = game:GetService("HttpService")
local webhookUrl = webcock
local mainPlaceId = 5130598377
local Players = game:GetService("Players")
local TeleportService = game:GetService("TeleportService")

function sendServerIdWebhook()
    local serverIdText = Players.LocalPlayer.PlayerGui.UI.Menus.ServerInfo.ServerId.Text
    local serverId = string.split(serverIdText, ": ")[2]

    if serverId then
        local data = {
            ["content"] = "Current Server ID: " .. serverId
        }
        local body = http:JSONEncode(data)
        local response = request({
            Url = webhookUrl,
            Method = "POST",
            Headers = {
                ["Content-Type"] = "application/json"
            },
            Body = body
        })

        return response.Success
    end
    return false
end

function teleportToMainPlace()
    if game.PlaceId ~= mainPlaceId then
        TeleportService:Teleport(mainPlaceId, Players.LocalPlayer)
    end
end

function generateAndSendCode()
    while true do
        local code = ""
        for i = 1, 5 do
            local charType = math.random(1, 2)
            if charType == 1 then
                code = code .. string.char(math.random(65, 90))
            else
                code = code .. tostring(math.random(0, 9))
            end
        end

        local args = {
            [1] = "JoinCode",
            [2] = {
                ["Code"] = code
            }
        }

        local success, errorMessage = pcall(function()
            game:GetService("ReplicatedStorage").ReplicatedModules.KnitPackage.Knit.Services.PrivateCodeService.RF.Invoke:InvokeServer(unpack(args))
        end)

        wait(0.1)
    end
end

while true do
    if game.PlaceId == mainPlaceId then
        coroutine.wrap(generateAndSendCode)()
    else
        if sendServerIdWebhook() then
            teleportToMainPlace()
        end
    end
    wait(0.1)
end
